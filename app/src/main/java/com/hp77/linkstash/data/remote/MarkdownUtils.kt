package com.hp77.linkstash.data.remote

import com.hp77.linkstash.domain.model.Link
import com.hp77.linkstash.domain.model.LinkType
import com.hp77.linkstash.domain.model.Tag
import java.text.SimpleDateFormat
import java.util.Date
import java.util.Locale

object MarkdownUtils {
    private val dateFormatter = SimpleDateFormat("MMM d, yyyy HH:mm:ss", Locale.getDefault())

    fun List<Link>.toMarkdown(): String {
        return buildString {
            appendLine("# LinkStash Backup")
            appendLine("Last updated: ${dateFormatter.format(Date())}")
            appendLine()
            
            // Group links by type
            val linksByType = this@toMarkdown.groupBy { it.type }
            
            // Stats section
            appendLine("## Stats")
            appendLine("- Total Links: ${this@toMarkdown.size}")
            appendLine("- Read: ${this@toMarkdown.count { it.isCompleted }}")
            appendLine("- Unread: ${this@toMarkdown.count { !it.isCompleted }}")
            appendLine("- With Tags: ${this@toMarkdown.count { it.tags.isNotEmpty() }}")
            appendLine("- With Notes: ${this@toMarkdown.count { !it.notes.isNullOrBlank() }}")
            appendLine()
            
            // Links by type
            linksByType.forEach { (linkType, links) ->
                appendLine("## ${linkType.name} Links (${links.size})")
                appendLine()
                
                links.forEach { link ->
                    appendLine("### ${link.title ?: "[No Title]"}")
                    appendLine("- URL: ${link.url}")
                    appendLine("- Type: ${link.type.name}")
                    appendLine("- Added: ${dateFormatter.format(Date(link.createdAt))}")
                    appendLine("- Status: ${if (link.isCompleted) "READ" else "UNREAD"}")
                    
                    if (link.completedAt != null) {
                        appendLine("- Completed: ${dateFormatter.format(Date(link.completedAt))}")
                    }
                    
                    if (link.tags.isNotEmpty()) {
                        appendLine("- Tags: ${link.tags.joinToString(", ") { tag -> "#${tag.name}" }}")
                    }
                    
                    if (!link.notes.isNullOrBlank()) {
                        appendLine("- Notes:")
                        appendLine("  ```")
                        link.notes.lines().forEach { line ->
                            appendLine("  $line")
                        }
                        appendLine("  ```")
                    }
                    
                    appendLine()
                }
            }
            
            appendLine("---")
            appendLine("Generated by LinkStash")
        }
    }
}
